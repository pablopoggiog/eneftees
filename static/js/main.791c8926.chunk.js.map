{"version":3,"sources":["components/Button/index.ts","components/Spinner/styles.ts","components/Spinner/index.tsx","components/Modal/styles.ts","components/Modal/index.tsx","constants/index.ts","assets/honest-work.jpg","styles.ts","App.tsx","hooks/useContract.ts","reportWebVitals.ts","index.tsx"],"names":["Button","styled","button","spin","keyframes","Loader","div","inner","innest","Spinner","Background","isOpen","Container","CloseButton","Content","Modal","content","onClose","onClick","CONTRACT_ADDRESS","HeaderContainer","Title","h1","Text","p","Image","img","Link","a","App","useState","isModalOpen","setIsModalOpen","currentAccount","setCurrentAccount","isMining","setIsMining","newNFT","setNewNFT","interactWithContract","callback","ethereum","window","signer","ethers","providers","Web3Provider","getSigner","Contract","myEneftee","abi","console","log","error","connectWallet","alert","request","method","accounts","setupEventListener","networkVersion","useCallback","contract","on","from","tokenId","toNumber","checkIfWalletIsConnected","length","account","askContractToMintNft","makeAnEpicNFT","nftTxn","wait","hash","useEffect","useContract","src","honestWork","width","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8prEAEaA,EAASC,IAAOC,OAAV,8OCAbC,EAAOC,YAAH,wRAgBGC,EAASJ,IAAOK,IAAV,iSAIR,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OAAwBD,EAAQ,OAASC,EAAS,OAAS,WAC1D,gBAAGD,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OACRD,EAAQ,OAASC,EAAS,OAAS,UACxBL,G,OCtBFM,EAA6B,kBACxC,cAACJ,EAAD,UACE,cAACA,EAAD,CAAQE,OAAK,EAAb,SACE,cAACF,EAAD,CAAQG,QAAM,SCAPE,EAAaT,IAAOK,IAAV,8PAUV,qBAAGK,OAAuB,OAAS,UAKnCC,EAAYX,IAAOK,IAAV,qOAYTO,EAAcZ,IAAOK,IAAV,8IAUXQ,EAAUb,IAAOK,IAAV,6CClCPS,EAAuC,SAAC,GAI9C,IAHLC,EAGI,EAHJA,QACAL,EAEI,EAFJA,OACAM,EACI,EADJA,QAEA,OACE,cAACP,EAAD,CAAYC,OAAQA,EAApB,SACE,eAACC,EAAD,WACE,cAACC,EAAD,CAAaK,QAASD,EAAtB,eACA,eAACH,EAAD,eAAWE,WCfNG,EAAmB,6CCHjB,MAA0B,wC,wCCE5BP,EAAYX,IAAOK,IAAV,kRAcTc,EAAkBnB,IAAOK,IAAV,0BAEfe,EAAQpB,IAAOqB,GAAV,0BAELC,EAAOtB,IAAOuB,EAAV,0BAEJC,EAAQxB,IAAOyB,IAAV,mDAILC,EAAO1B,IAAO2B,EAAV,6CCsDFC,EApEH,WAAO,IAAD,EACsBC,oBAAkB,GADxC,mBACTC,EADS,KACIC,EADJ,OCPS,WAAO,IAAD,EACaF,mBAAS,IADtB,mBACxBG,EADwB,KACRC,EADQ,OAECJ,oBAAS,GAFV,mBAExBK,EAFwB,KAEdC,EAFc,OAGHN,mBAAwB,MAHrB,mBAGxBO,EAHwB,KAGhBC,EAHgB,KAKzBC,EAAuB,SAC3BC,GAEA,IAAK,IACKC,EAAaC,OAAbD,SAER,GAAIA,EAAU,CACZ,IACME,EADW,IAAIC,IAAOC,UAAUC,aAAaL,GAC3BM,YAOxBP,EAN0B,IAAII,IAAOI,SACnC7B,EACA8B,EAAUC,IACVP,SAKFQ,QAAQC,IAAI,kCAEd,MAAOC,GACPF,QAAQC,IAAIC,KAIVC,EAAa,uCAAG,gCAAA1B,EAAA,oEAEGc,OAAbD,EAFU,EAEVA,SAFU,uBAKhBc,MAAM,iBALU,0CASKd,EAASe,QAAQ,CACtCC,OAAQ,wBAVQ,OASZC,EATY,OAalBP,QAAQC,IAAI,YAAaM,EAAS,IAClCxB,EAAkBwB,EAAS,IAE3BC,IAEuC,MAAnCjB,OAAOD,SAASmB,gBAClBL,MACE,gFApBc,kDAuBlBJ,QAAQC,IAAR,MAvBkB,0DAAH,qDA2BbO,EAAqBE,sBAAW,sBAAC,sBAAAjC,EAAA,sDACrCW,GAAqB,SAACuB,GACpBA,EAASC,GAAG,oBAAoB,SAACC,EAAMC,GACrCd,QAAQC,IAAIY,EAAMC,EAAQC,YAC1B5B,EAAU2B,EAAQC,kBAGtBf,QAAQC,IAAI,yBAPyB,2CAQpC,IAEGe,EAA2BN,sBAAW,sBAAC,kCAAAjC,EAAA,2DACtBc,OAAbD,EADmC,EACnCA,SADmC,uBAIzCU,QAAQC,IAAI,gCAJ6B,0BAOzCD,QAAQC,IAAI,8BAA+BX,GAPF,uBAUpBA,EAASe,QAAQ,CAAEC,OAAQ,iBAVP,OAYnB,KAFlBC,EAVqC,QAY9BU,QACLC,EAAUX,EAAS,GACzBP,QAAQC,IAAI,+BAAgCiB,GAC5CnC,EAAkBmC,GAElBV,KAEAR,QAAQC,IAAI,+BAnB6B,4CAqB1C,CAACO,IAEEW,EAAoB,uCAAG,sBAAA1C,EAAA,sDAC3BW,EAAoB,uCAAC,WAAOuB,GAAP,eAAAlC,EAAA,6DACnBuB,QAAQC,IAAI,yCADO,SAEAU,EAASS,gBAFT,cAEfC,EAFe,OAInBpC,GAAY,GACZe,QAAQC,IAAI,yBALO,SAMboB,EAAOC,OANM,OAOnBtB,QAAQC,IAAIoB,GACZrB,QAAQC,IAAR,kEAC6DoB,EAAOE,OAEpEtC,GAAY,GAXO,4CAAD,uDADO,2CAAH,qDAoB1B,OAJAuC,qBAAU,WACRR,MACC,CAACA,IAEG,CACLlC,iBACAqB,gBACAgB,uBACAnC,WACAE,UDlGEuC,GALF3C,EAJc,EAIdA,eACAqB,EALc,EAKdA,cACAgB,EANc,EAMdA,qBACAnC,EAPc,EAOdA,SACAE,EARc,EAQdA,OAGFsC,qBAAU,WACJtC,GAAQL,GAAe,KAC1B,CAACK,IAIJ,OACE,eAAC,EAAD,WACE,eAACjB,EAAD,WACE,cAACC,EAAD,gCACA,cAACE,EAAD,uEAGF,cAACE,EAAD,CAAOoD,IAAKC,EAAYC,MAAM,UAE9B,cAAC/E,EAAD,CACEkB,QAAUe,EAAyCqC,EAAxB,kBAAMhB,KADnC,SAGIrB,EAAoC,WAAnB,mBAEpBE,GAAY,cAAC,EAAD,IACb,cAACR,EAAD,CAAMqD,KH3CV,8DG2C8BC,OAAO,SAASC,IAAI,aAA9C,qDAICnD,GACC,cAAC,EAAD,CACEpB,OAAQoB,EACRd,QAxBW,kBAAMe,GAAe,IAyBhChB,QACE,qCACE,cAACO,EAAD,2EAIA,cAACA,EAAD,4FAKA,cAACA,EAAD,UACE,cAACI,EAAD,CACEqD,KAAI,6CAAwC7D,EAAxC,YAA4DkB,GAChE4C,OAAO,SACPC,IAAI,aAHN,wCElDDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.791c8926.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  border-radius: 5px;\r\n  background-color: #63b5cf;\r\n  padding: 10px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.6s;\r\n\r\n  &:hover {\r\n    background-color: #3ca2c3;\r\n    transform: scale(1.01);\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst spin = keyframes`\r\n        0% {\r\n          transform: rotate(0deg);\r\n        }\r\n  \r\n        50% {\r\n          transform: rotate(180deg);\r\n          opacity: 0.6;\r\n        }\r\n  \r\n        100% {\r\n          transform: rotate(360deg);\r\n          opacity: 1;\r\n        }\r\n      `;\r\n\r\nexport const Loader = styled.div<{ inner?: boolean; innest?: boolean }>`\r\n  border: 16px solid lightBlue;\r\n  border-top: 16px solid rgba(255, 219, 220);\r\n  border-radius: 50%;\r\n  width: ${({ inner, innest }) => (inner ? \"67px\" : innest ? \"15px\" : \"120px\")};\r\n  height: ${({ inner, innest }) =>\r\n    inner ? \"67px\" : innest ? \"15px\" : \"120px\"};\r\n  animation: ${spin} 2s linear infinite;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport { Loader } from \"./styles\";\r\n\r\nexport const Spinner: FunctionComponent = () => (\r\n  <Loader>\r\n    <Loader inner>\r\n      <Loader innest />\r\n    </Loader>\r\n  </Loader>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\ninterface BackgroundProps {\r\n  isOpen: boolean;\r\n}\r\n\r\nexport const Background = styled.div<BackgroundProps>`\r\n  background: rgba(0, 0, 0, 0.86);\r\n  position: fixed;\r\n  bottom: 0;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 90;\r\n  display: ${({ isOpen }) => (isOpen ? \"flex\" : \"none\")};\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #363537;\r\n  color: white;\r\n  border-radius: 5px;\r\n  width: 80%;\r\n  max-width: 500px;\r\n  padding: 1em 1.4em;\r\n  word-break: break-word;\r\n`;\r\n\r\nexport const CloseButton = styled.div`\r\n  align-self: flex-end;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 1em;\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport { Background, CloseButton, Container, Content } from \"./styles\";\r\n\r\ninterface ModalProps {\r\n  content: string | JSX.Element;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const Modal: FunctionComponent<ModalProps> = ({\r\n  content,\r\n  isOpen,\r\n  onClose,\r\n}) => {\r\n  return (\r\n    <Background isOpen={isOpen}>\r\n      <Container>\r\n        <CloseButton onClick={onClose}>x</CloseButton>\r\n        <Content> {content}</Content>\r\n      </Container>\r\n    </Background>\r\n  );\r\n};\r\n","export const OPENSEA_LINK =\r\n  \"https://testnets.opensea.io/collection/squarenft-jb70rzeywn\";\r\nexport const TOTAL_MINT_COUNT = 50;\r\nexport const CONTRACT_ADDRESS = \"0x86E5064b3C441E446be2A97cec379de3EfF5514c\";\r\n","export default __webpack_public_path__ + \"static/media/honest-work.ad914397.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 3em;\r\n  background-color: #363537;\r\n  min-height: 100vh;\r\n  padding: 1em;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nexport const HeaderContainer = styled.div``;\r\n\r\nexport const Title = styled.h1``;\r\n\r\nexport const Text = styled.p``;\r\n\r\nexport const Image = styled.img`\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  color: white;\r\n`;\r\n","import { useEffect, useState } from \"react\";\nimport { Button, Spinner } from \"src/components\";\nimport {\n  CONTRACT_ADDRESS,\n  OPENSEA_LINK,\n  // TOTAL_MINT_COUNT,\n} from \"src/constants\";\nimport honestWork from \"src/assets/honest-work.jpg\";\nimport { Modal } from \"src/components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { Container, HeaderContainer, Title, Text, Link, Image } from \"./styles\";\n\nconst App = () => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const {\n    currentAccount,\n    connectWallet,\n    askContractToMintNft,\n    isMining,\n    newNFT,\n  } = useContract();\n\n  useEffect(() => {\n    if (newNFT) setIsModalOpen(true);\n  }, [newNFT]);\n\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <Container>\n      <HeaderContainer>\n        <Title>My NFT Collection</Title>\n        <Text>Each unique. Each beautiful. Discover your NFT today.</Text>\n      </HeaderContainer>\n\n      <Image src={honestWork} width=\"300px\" />\n\n      <Button\n        onClick={!currentAccount ? () => connectWallet() : askContractToMintNft}\n      >\n        {!currentAccount ? \"Connect Wallet\" : \"Mint NFT\"}\n      </Button>\n      {isMining && <Spinner />}\n      <Link href={OPENSEA_LINK} target=\"_blank\" rel=\"noreferrer\">\n        🌊 View Collection on OpenSea\n      </Link>\n\n      {isModalOpen && (\n        <Modal\n          isOpen={isModalOpen}\n          onClose={closeModal}\n          content={\n            <>\n              <Text>\n                Hey there! We've minted your NFT and sent it to your wallet.\n              </Text>\n\n              <Text>\n                It may be blank right now. It can take a max of 10 min to show\n                up on OpenSea.\n              </Text>\n\n              <Text>\n                <Link\n                  href={`https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${newNFT}`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Here's the link\n                </Link>\n              </Text>\n            </>\n          }\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport myEneftee from \"src/utils/MyEneftee.json\";\r\nimport { CONTRACT_ADDRESS } from \"src/constants\";\r\n\r\nexport const useContract = () => {\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n  const [isMining, setIsMining] = useState(false);\r\n  const [newNFT, setNewNFT] = useState<number | null>(null);\r\n\r\n  const interactWithContract = (\r\n    callback: (contract: ethers.Contract) => void\r\n  ) => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const connectedContract = new ethers.Contract(\r\n          CONTRACT_ADDRESS,\r\n          myEneftee.abi,\r\n          signer\r\n        );\r\n\r\n        callback(connectedContract);\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        alert(\"Get MetaMask!\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      console.log(\"Connected\", accounts[0]);\r\n      setCurrentAccount(accounts[0]);\r\n\r\n      setupEventListener();\r\n\r\n      if (window.ethereum.networkVersion !== \"4\")\r\n        alert(\r\n          \"Hey — I see you're connected to mainnet but this only works on Rinkeby!\"\r\n        );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const setupEventListener = useCallback(async () => {\r\n    interactWithContract((contract) => {\r\n      contract.on(\"NewEpicNFTMinted\", (from, tokenId) => {\r\n        console.log(from, tokenId.toNumber());\r\n        setNewNFT(tokenId.toNumber());\r\n      });\r\n    });\r\n    console.log(\"Setup event listener!\");\r\n  }, []);\r\n\r\n  const checkIfWalletIsConnected = useCallback(async () => {\r\n    const { ethereum } = window;\r\n\r\n    if (!ethereum) {\r\n      console.log(\"Make sure you have metamask!\");\r\n      return;\r\n    } else {\r\n      console.log(\"We have the ethereum object\", ethereum);\r\n    }\r\n\r\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n\r\n    if (accounts.length !== 0) {\r\n      const account = accounts[0];\r\n      console.log(\"Found an authorized account:\", account);\r\n      setCurrentAccount(account);\r\n\r\n      setupEventListener();\r\n    } else {\r\n      console.log(\"No authorized account found\");\r\n    }\r\n  }, [setupEventListener]);\r\n\r\n  const askContractToMintNft = async () => {\r\n    interactWithContract(async (contract) => {\r\n      console.log(\"Going to pop wallet now to pay gas...\");\r\n      let nftTxn = await contract.makeAnEpicNFT();\r\n\r\n      setIsMining(true);\r\n      console.log(\"Mining...please wait.\");\r\n      await nftTxn.wait();\r\n      console.log(nftTxn);\r\n      console.log(\r\n        `Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`\r\n      );\r\n      setIsMining(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIfWalletIsConnected();\r\n  }, [checkIfWalletIsConnected]);\r\n\r\n  return {\r\n    currentAccount,\r\n    connectWallet,\r\n    askContractToMintNft,\r\n    isMining,\r\n    newNFT,\r\n  };\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}